# Anthropic API Configuration
ANTHROPIC_API_KEY=sk-ant-your-api-key-here

# Claude Model Selection (Latest as of Oct 2025)
# Options:
#   claude-haiku-4-5-20251001 (default) - Fastest (~1-2s), good quality, cheapest
#   claude-sonnet-4-5-20250929 - Best balance, ~2-3s per call
#   claude-opus-4-1-20250805 - Highest quality, slowest, most expensive
# Note: Can also use aliases like claude-haiku-4-5, claude-sonnet-4-5, claude-opus-4-1
MODEL=claude-haiku-4-5-20251001

# Org Files Location (Primary - for writing new entries)
# Set this to your org-agenda directory
ORG_DIR=/Users/garyo/Documents/org-agenda

# Logseq Notes Location (Secondary - read-only archival)
# Set this to your Logseq markdown notes directory
LOGSEQ_DIR="/Users/garyo/Logseq Notes"

# Skills Directory (optional, defaults to ./skills)
# SKILLS_DIR=/opt/pkm-bridge/skills

# Server Configuration
PORT=8000
HOST=127.0.0.1

# Logging Configuration
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
# DEBUG - Show all logs including timing information
# INFO - Show general operation logs (default)
# WARNING - Show only warnings and errors
# ERROR - Show only errors
LOG_LEVEL=INFO

# Allowed Commands (comma-separated, no spaces)
# These are the only commands that can be executed via execute_shell
# ALLOWED_COMMANDS=rg,ripgrep,grep,fd,find,date,cat,ls,emacs,git,head,tail,wc,date,sed

# Authentication Configuration
# Enable auth (set to false to disable authentication entirely)
AUTH_ENABLED=true

# JWT Secret Key - CHANGE THIS to a random secret!
# Generate with: ./generate-auth-config.py (recommended)
# Or manually: python3 -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET=change-this-to-a-random-secret-key

# Password Hash (bcrypt)
# IMPORTANT: Use ./generate-auth-config.py to generate both JWT_SECRET and PASSWORD_HASH
# Bcrypt hash format: $2b$12$... (starts with $2b$ and is ~60 characters)
# Manual generation: python3 -c "import bcrypt; print(bcrypt.hashpw(b'your-password', bcrypt.gensalt(12)).decode())"
PASSWORD_HASH=$2b$12$example.hash.change.this.to.your.real.bcrypt.hash

# Token expiry in hours (default: 168 = 1 week)
TOKEN_EXPIRY_HOURS=168

# Optional: Password for CLI client (pkm-cli.py)
# If set, CLI will automatically authenticate without prompting
# If not set, CLI will prompt for password and save token to ~/.pkm-cli-token
# PKM_PASSWORD=your-password-here
